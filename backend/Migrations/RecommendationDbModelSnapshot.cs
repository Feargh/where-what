// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecommendationList.Models;

#nullable disable

namespace where_what.Migrations
{
    [DbContext(typeof(RecommendationDb))]
    partial class RecommendationDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("RecommendationList.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Latitude = 53.343834999999999,
                            Longitude = -6.2637359999999997,
                            Name = "Dublin"
                        },
                        new
                        {
                            Id = 2,
                            Latitude = 51.513666000000001,
                            Longitude = -0.130055,
                            Name = "London"
                        });
                });

            modelBuilder.Entity("RecommendationList.Models.Recommendation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Recommendations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Description = "Victorian red brick pub with great atmosphere",
                            Latitude = 53.343834999999999,
                            Longitude = -6.2637359999999997,
                            Name = "The Stag's Head",
                            Type = "Pub"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            Description = "Delicious Japanese food, don't miss the matcha french toast",
                            Latitude = 51.513666000000001,
                            Longitude = -0.130055,
                            Name = "Shack-Fuyu Soho",
                            Type = "Japanese restaurant"
                        });
                });

            modelBuilder.Entity("RecommendationList.Models.Recommendation", b =>
                {
                    b.HasOne("RecommendationList.Models.City", "City")
                        .WithMany("Recommendations")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("RecommendationList.Models.City", b =>
                {
                    b.Navigation("Recommendations");
                });
#pragma warning restore 612, 618
        }
    }
}
